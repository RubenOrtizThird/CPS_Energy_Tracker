"use strict";(self.webpackChunkjsapi_angular_cli=self.webpackChunkjsapi_angular_cli||[]).push([[6062],{8868:(bt,_t,tt)=>{tt.d(_t,{Z:()=>mt});var N=tt(50484),xt=tt(57964),ht=tt(89317),ct=tt(34222),ft=tt(4703),J=tt(80543),dt=tt(73018),yt=tt(10141);class Mt{constructor(I=null,K=null,X=null){this.minValue=I,this.maxValue=K,this.noDataValue=X}}var ut,ot=tt(86741);let st=ut=class extends ht.wq{static createEmptyBand(T,I){return new(ut.getPixelArrayConstructor(T))(I)}static getPixelArrayConstructor(T){let I;switch(T){case"u1":case"u2":case"u4":case"u8":I=Uint8Array;break;case"u16":I=Uint16Array;break;case"u32":I=Uint32Array;break;case"s8":I=Int8Array;break;case"s16":I=Int16Array;break;case"s32":I=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":I=Float32Array;break;case"f64":I=Float64Array}return I}constructor(T){super(T),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(T){if(!T)return"f32";let I=T.toLowerCase();return["u1","u2","u4"].includes(I)?I="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(I)||(I="f32"),I}getPlaneCount(){return this.pixels?.length}addData(T){if(!T.pixels||T.pixels.length!==this.width*this.height)throw new xt.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(T.pixels),this.statistics.push(T.statistics??new Mt)}getAsRGBA(){const T=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(T);break;default:this._fillFrom8Bit(T)}return new Uint8ClampedArray(T)}getAsRGBAFloat(){const T=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(T),T}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(K=>this._calculateBandStatistics(K,this.mask));const T=this.mask;let I=0;if(null!=T)for(let K=0;K<T.length;K++)T[K]&&I++;else I=this.width*this.height;this.validPixelCount=I}clamp(T){if(!T||"f64"===T||"f32"===T||!this.pixels)return;const[I,K]=(0,ot.r)(T),X=this.pixels,H=this.width*this.height,V=X.length;let S,Q,L;const Y=[];for(let et=0;et<V;et++){L=ut.createEmptyBand(T,H),S=X[et];for(let z=0;z<H;z++)Q=S[z],L[z]=Q>K?K:Q<I?I:Q;Y.push(L)}this.pixels=Y,this.pixelType=T}extractBands(T){const{pixels:I,statistics:K}=this;if(null==T||0===T.length||!I||0===I.length)return this;const X=I.length,H=T.some(z=>z>=I.length),V=X===T.length&&!T.some((z,B)=>z!==B);if(H||V)return this;const S=this.bandMasks?.length===X?T.map(z=>this.bandMasks[z]):void 0;let{mask:Q,validPixelCount:L}=this;const{width:Y,height:et}=this;if(S){if(1===S.length)Q=S[0];else{const z=Y*et;Q=new Uint8Array(z).fill(255);for(let B=0;B<S.length;B++){const v=S[B];for(let D=0;D<z;D++)v[D]||(Q[D]=0)}}L=Q.filter(z=>!!z).length}return new ut({pixelType:this.pixelType,width:Y,height:et,mask:Q,bandMasks:S,validPixelCount:L,maskIsAlpha:this.maskIsAlpha,pixels:T.map(z=>I[z]),statistics:K&&T.map(z=>K[z])})}clone(){const T=new ut({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let I;null!=this.mask&&(T.mask=this.mask instanceof Uint8Array?new Uint8Array(this.mask):this.mask.slice(0)),this.bandMasks&&(T.bandMasks=this.bandMasks.map(X=>new Uint8Array(X)));const K=ut.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){T.pixels=[];const X=!!this.pixels[0].slice;for(I=0;I<this.pixels.length;I++)T.pixels[I]=X?this.pixels[I].slice(0,this.pixels[I].length):new K(this.pixels[I])}if(this.statistics)for(T.statistics=[],I=0;I<this.statistics.length;I++)T.statistics[I]=(0,ct.d9)(this.statistics[I]);return T.premultiplyAlpha=this.premultiplyAlpha,T}_fillFrom8Bit(T){const{mask:I,maskIsAlpha:K,premultiplyAlpha:X,pixels:H}=this;if(!T||!H?.length)return void ft.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let V,S,Q,L;V=S=Q=H[0],H.length>=3?(S=H[1],Q=H[2]):2===H.length&&(S=H[1]);const Y=new Uint32Array(T),et=this.width*this.height;if(V.length===et)if(null!=I&&I.length===et)if(K)for(L=0;L<et;L++){const z=I[L];if(z){const B=z/255;Y[L]=X?z<<24|Q[L]*B<<16|S[L]*B<<8|V[L]*B:z<<24|Q[L]<<16|S[L]<<8|V[L]}}else for(L=0;L<et;L++)I[L]&&(Y[L]=255<<24|Q[L]<<16|S[L]<<8|V[L]);else for(L=0;L<et;L++)Y[L]=255<<24|Q[L]<<16|S[L]<<8|V[L];else ft.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(T){const{pixels:I,mask:K,statistics:X}=this;if(!T||!I?.length)return void ft.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const H=this.pixelType;let V=1,S=0,Q=1;if(X&&X.length>0){for(const E of X)null!=E.minValue&&(S=Math.min(S,E.minValue)),null!=E.maxValue&&null!=E.minValue&&(Q=Math.max(Q,E.maxValue-E.minValue));V=255/Q}else{let E=255;"s8"===H?(S=-128,E=127):"u16"===H?E=65535:"s16"===H?(S=-32768,E=32767):"u32"===H?E=4294967295:"s32"===H?(S=-2147483648,E=2147483647):"f32"===H?(S=-34e38,E=34e38):"f64"===H&&(S=-Number.MAX_VALUE,E=Number.MAX_VALUE),V=255/(E-S)}const L=new Uint32Array(T),Y=this.width*this.height;let et,z,B,v,D;if(et=z=B=I[0],et.length!==Y)return ft.Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(I.length>=2)if(z=I[1],I.length>=3&&(B=I[2]),null!=K&&K.length===Y)for(v=0;v<Y;v++)K[v]&&(L[v]=255<<24|(B[v]-S)*V<<16|(z[v]-S)*V<<8|(et[v]-S)*V);else for(v=0;v<Y;v++)L[v]=255<<24|(B[v]-S)*V<<16|(z[v]-S)*V<<8|(et[v]-S)*V;else if(null!=K&&K.length===Y)for(v=0;v<Y;v++)D=(et[v]-S)*V,K[v]&&(L[v]=255<<24|D<<16|D<<8|D);else for(v=0;v<Y;v++)D=(et[v]-S)*V,L[v]=255<<24|D<<16|D<<8|D}_fillFrom32Bit(T){const{pixels:I,mask:K}=this;if(!T||!I?.length)return ft.Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let X,H,V,S;X=H=V=I[0],I.length>=3?(H=I[1],V=I[2]):2===I.length&&(H=I[1]);const Q=this.width*this.height;if(X.length!==Q)return ft.Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let L=0;if(null!=K&&K.length===Q)for(S=0;S<Q;S++)T[L++]=X[S],T[L++]=H[S],T[L++]=V[S],T[L++]=1&K[S];else for(S=0;S<Q;S++)T[L++]=X[S],T[L++]=H[S],T[L++]=V[S],T[L++]=1}_calculateBandStatistics(T,I){let K=1/0,X=-1/0;const H=T.length;let V,S=0;if(null!=I)for(V=0;V<H;V++)I[V]&&(S=T[V],K=S<K?S:K,X=S>X?S:X);else for(V=0;V<H;V++)S=T[V],K=S<K?S:K,X=S>X?S:X;return new Mt(K,X)}};(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"width",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"height",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"pixelType",void 0),(0,N._)([(0,dt.p)("pixelType")],st.prototype,"castPixelType",null),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"validPixelCount",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"mask",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"maskIsAlpha",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"pixels",void 0),(0,N._)([(0,J.Cb)()],st.prototype,"premultiplyAlpha",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"statistics",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"depthCount",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"noDataValues",void 0),(0,N._)([(0,J.Cb)({json:{write:!0}})],st.prototype,"bandMasks",void 0),st=ut=(0,N._)([(0,yt.j)("esri.layers.support.PixelBlock")],st);const mt=st},98797:(bt,_t,tt)=>{tt.d(_t,{$f:()=>ft,CD:()=>ct,DX:()=>ht,Gd:()=>yt,Kh:()=>L,Pz:()=>Mt,Qh:()=>g,SJ:()=>ot,Uk:()=>x,Vl:()=>w,XV:()=>ut,a2:()=>T,nA:()=>S,nk:()=>J,oB:()=>V,pW:()=>B,sS:()=>H,us:()=>et,wV:()=>st,zp:()=>mt});var ht,ct,t,N=tt(8868),xt=tt(86741);(t=ht||(ht={}))[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(ct||(ct={}));const ft=6;function J(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function yt(t){if(!t?.length||t.some(n=>!J(n)))return null;if(1===t.length)return t[0]?.clone()??null;const s=t,{width:e,height:i,pixelType:o}=s[0];if(s.some(n=>n.width!==e||n.height!==i))return null;const l=s.map(({mask:n})=>n).filter(n=>null!=n);let a=null;l.length&&(a=new Uint8Array(e*i),a.set(l[0]),l.length>1&&X(l.slice(1),a));const r=[];s.forEach(({pixels:n})=>r.push(...n));const f=s.map(({statistics:n})=>n).filter(n=>n?.length),c=[];return f.forEach(n=>c.push(...n)),new N.Z({pixelType:o,width:e,height:i,mask:a,pixels:r,statistics:c.length?c:null})}function Mt(t){if(!t)return;const s=t.colormap;if(!s||0===s.length)return;const e=s.sort((h,y)=>h[0]-y[0]);let i=0;e[0][0]<0&&(i=e[0][0]);const o=Math.max(256,e[e.length-1][0]-i+1),l=new Uint8Array(4*o),a=[];let r,f=0,c=0;const n=5===e[0].length;if(o>65536)return e.forEach(h=>{a[h[0]-i]=n?h.slice(1):h.slice(1).concat([255])}),{indexed2DColormap:a,offset:i,alphaSpecified:n};if(t.fillUnspecified)for(r=e[c],f=r[0]-i;f<o;f++)l[4*f]=r[1],l[4*f+1]=r[2],l[4*f+2]=r[3],l[4*f+3]=n?r[4]:255,f===r[0]-i&&(r=c===e.length-1?r:e[++c]);else for(f=0;f<e.length;f++)r=e[f],c=4*(r[0]-i),l[c]=r[1],l[c+1]=r[2],l[c+2]=r[3],l[c+3]=n?r[4]:255;return{indexedColormap:l,offset:i,alphaSpecified:n}}function ot(t,s){if(!J(t)||!s||!s.indexedColormap&&!s.indexed2DColormap)return t;const e=t.clone(),i=e.pixels;let o=e.mask;const l=e.width*e.height;if(1!==i.length)return t;const{indexedColormap:a,indexed2DColormap:r,offset:f,alphaSpecified:c}=s;let n=0;const h=i[0],y=new Uint8Array(h.length),u=new Uint8Array(h.length),m=new Uint8Array(h.length);let p,M=0;if(a){const _=a.length-1;if(null!=o)for(n=0;n<l;n++)o[n]&&(M=4*(h[n]-f),M<f||M>_?o[n]=0:(y[n]=a[M],u[n]=a[M+1],m[n]=a[M+2],o[n]=a[M+3]));else{for(o=new Uint8Array(l),n=0;n<l;n++)M=4*(h[n]-f),M<f||M>_?o[n]=0:(y[n]=a[M],u[n]=a[M+1],m[n]=a[M+2],o[n]=a[M+3]);e.mask=o}}else if(r)if(null!=o)for(n=0;n<l;n++)o[n]&&(p=r[h[n]],y[n]=p[0],u[n]=p[1],m[n]=p[2],o[n]=p[3]);else{for(o=new Uint8Array(l),n=0;n<l;n++)p=r[h[n]],y[n]=p[0],u[n]=p[1],m[n]=p[2],o[n]=p[3];e.mask=o}return e.pixels=[y,u,m],e.statistics=null,e.pixelType="u8",e.maskIsAlpha=c,e}function ut(t,s){if(!J(t))return null;const{pixels:e,mask:i}=t,o=e.length;let l=s.lut;const{offset:a}=s;l&&1===l[0].length&&(l=e.map(()=>l));const r=[],f=s.outputPixelType||"u8";for(let n=0;n<o;n++){const h=st(e[n],i,l[n],a||0,f);r.push(h)}const c=new N.Z({width:t.width,height:t.height,pixels:r,mask:i,pixelType:f});return c.updateStatistics(),c}function st(t,s,e,i,o){const l=t.length,a=N.Z.createEmptyBand(o,l);if(s)for(let r=0;r<l;r++)s[r]&&(a[r]=e[t[r]-i]);else for(let r=0;r<l;r++)a[r]=e[t[r]-i];return a}function mt(t,s){if(!J(t))return null;const e=t.clone(),{pixels:i}=e,o=e.width*e.height,l=s.length,a=Math.floor(l/2),r=s[Math.floor(a)],f=i[0];let c,n,h,y,u,m,p=!1;const M=new Uint8Array(o),_=new Uint8Array(o),P=new Uint8Array(o);let O=e.mask;const b=4===s[0].mappedColor.length;for(O||(O=new Uint8Array(o),O.fill(b?255:1),e.mask=O),u=0;u<o;u++)if(O[u]){for(c=f[u],p=!1,m=a,n=r,h=0,y=l-1;y-h>1;){if(c===n.value){p=!0;break}c>n.value?h=m:y=m,m=Math.floor((h+y)/2),n=s[Math.floor(m)]}p||(c===s[h].value?(n=s[h],p=!0):c===s[y].value?(n=s[y],p=!0):c<s[h].value?(p=!1,n=null):c>s[h].value&&(c<s[y].value?(n=s[h],p=!0):y===l-1?(p=!1,n=null):(n=s[y],p=!0))),p?(M[u]=n.mappedColor[0],_[u]=n.mappedColor[1],P[u]=n.mappedColor[2],O[u]=n.mappedColor[3]):M[u]=_[u]=P[u]=O[u]=0}return e.pixels=[M,_,P],e.mask=O,e.pixelType="u8",e.maskIsAlpha=b,e}function T(t,s){if(!J(t))return null;const{width:e,height:i}=t,{inputRanges:o,outputValues:l,outputPixelType:a,noDataRanges:r,allowUnmatched:f,isLastInputRangeInclusive:c}=s,n=t.pixels[0],h=N.Z.createEmptyBand(a,n.length),y=t.mask,u=new Uint8Array(e*i);y?u.set(y):u.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,p=o.map(b=>b-m);p[0]=o[0],p[p.length-1]=o[o.length-1]+(c?1e-6:0);const M=o.length/2,[_,P]=(0,xt.r)(a);for(let b=0;b<i;b++)for(let U=0;U<e;U++){const R=b*e+U;if(u[R]){const C=n[R];let W=!1;for(let $=M-1;$>=0;$--)if(C===p[2*$]||C>p[2*$]&&C<p[2*$+1]){h[R]=l[$],W=!0;break}W||(f?h[R]=C>P?P:C<_?_:C:u[R]=0)}}const O=r?.length;if(O)for(let b=0;b<i;b++)for(let U=0;U<e;U++){const R=b*e+U;if(!y||y[R]){const C=n[R];for(let W=0;W<O;W+=2)if(C>=r[W]&&C<=r[W+1]){h[R]=0,u[R]=0;break}}}return new N.Z({width:e,height:i,pixelType:a,pixels:[h],mask:u})}function I(t,s,e,i){const o=null!=e&&e.length>=2?new Set(e):null,l=1===e?.length?e[0]:null,a=!!s?.length;for(let r=0;r<t.length;r++)if(i[r]){const f=t[r];if(a){let c=!1;for(let n=0;n<s.length;n+=2)if(f>=s[n]&&f<=s[n+1]){c=!0;break}c||(i[r]=0)}i[r]&&(f===l||o?.has(f))&&(i[r]=0)}}function K(t,s){const e=t[0].length;for(let i=0;i<e;i++)if(s[i]){let o=!1;for(let l=0;l<t.length;l++)if(t[l][i]){o=!0;break}o||(s[i]=0)}}function X(t,s){const e=t[0].length;for(let i=0;i<e;i++)if(s[i]){let o=!1;for(let l=0;l<t.length;l++)if(0===t[l][i]){o=!0;break}o&&(s[i]=0)}}function H(t,s){if(!J(t))return null;const{width:e,height:i,pixels:o}=t,l=e*i,a=new Uint8Array(l);t.mask?a.set(t.mask):a.fill(255);const r=o.length,{includedRanges:f,noDataValues:c,outputPixelType:n,matchAll:h,lookups:y}=s;if(y){const u=[];for(let m=0;m<r;m++){const p=y[m],M=st(o[m],a,p.lut,p.offset||0,"u8");u.push(M)}1===u.length?a.set(u[0]):h?K(u,a):X(u,a)}else if(h){const u=[];for(let m=0;m<r;m++){const p=new Uint8Array(l);p.set(a),I(o[m],f?.slice(2*m,2*m+2),c?.[m],p),u.push(p)}1===u.length?a.set(u[0]):K(u,a)}else for(let u=0;u<r;u++)I(o[u],f?.slice(2*u,2*u+2),c?.[u],a);return new N.Z({width:e,height:i,pixelType:n,pixels:o,mask:a})}function V(t){const{srcPixelType:s,inputRanges:e,outputValues:i,allowUnmatched:o,noDataRanges:l,isLastInputRangeInclusive:a,outputPixelType:r}=t;if("u8"!==s&&"s8"!==s&&"u16"!==s&&"s16"!==s)return null;const f=s.includes("16")?65536:256,c=s.includes("s")?-f/2:0,n=N.Z.createEmptyBand(r,f),h=new Uint8Array(f);o&&h.fill(255);const[y,u]=(0,xt.r)(r);if(e?.length&&i?.length){const p=e.map(M=>M-1e-6);p[0]=e[0],a&&(p[p.length-1]=e[e.length-1]);for(let M=0;M<p.length;M++){const _=i[M]>u?u:i[M]<y?y:i[M],P=Math.ceil(p[2*M]-c),O=Math.floor(p[2*M+1]-c);for(let b=P;b<=O;b++)n[b]=_,h[b]=255}}if(l?.length)for(let m=0;m<l.length;m++){const p=Math.ceil(l[2*m]-c),M=Math.floor(l[2*m+1]-c);for(let _=p;_<=M;_++)h[_]=0}return{lut:n,offset:c,mask:h}}function S(t,s,e){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,o=t.includes("s")?-i/2:0,l=new Uint8Array(i);if(s)for(let a=0;a<s.length;a++){const r=Math.ceil(s[2*a]-o),f=Math.floor(s[2*a+1]-o);for(let c=r;c<=f;c++)l[c]=255}else l.fill(255);if(e)for(let a=0;a<e.length;a++)l[e[a]-o]=0;return{lut:l,offset:o}}function L(t,s){if(!t||0===t.length)return null;const e=t.find(m=>m.pixelBlock);if(null==e?.pixelBlock)return null;const i=(e.extent.xmax-e.extent.xmin)/e.pixelBlock.width,o=(e.extent.ymax-e.extent.ymin)/e.pixelBlock.height,l=.01*Math.min(i,o),a=t.sort((m,p)=>Math.abs(m.extent.ymax-p.extent.ymax)>l?p.extent.ymax-m.extent.ymax:Math.abs(m.extent.xmin-p.extent.xmin)>l?m.extent.xmin-p.extent.xmin:0),r=Math.min.apply(null,a.map(m=>m.extent.xmin)),f=Math.min.apply(null,a.map(m=>m.extent.ymin)),c=Math.max.apply(null,a.map(m=>m.extent.xmax)),n=Math.max.apply(null,a.map(m=>m.extent.ymax)),h={x:Math.round((s.xmin-r)/i),y:Math.round((n-s.ymax)/o)},y={width:Math.round((c-r)/i),height:Math.round((n-f)/o)},u={width:Math.round((s.xmax-s.xmin)/i),height:Math.round((s.ymax-s.ymin)/o)};return Math.round(y.width/e.pixelBlock.width)*Math.round(y.height/e.pixelBlock.height)!==a.length||h.x<0||h.y<0||y.width<u.width||y.height<u.height?null:{extent:s,pixelBlock:et(a.map(m=>m.pixelBlock),y,{clipOffset:h,clipSize:u})}}function Y(t,s,e,i,o,l){const{width:a,height:r}=e.block,{x:f,y:c}=e.offset,{width:n,height:h}=e.mosaic,y=function Q(t,s,e,i,o,l,a,r){return{xmin:o<=e*t?0:o<e*t+t?o-e*t:t,ymin:l<=i*s?0:l<i*s+s?l-i*s:s,xmax:o+a<=e*t?0:o+a<e*t+t?o+a-e*t:t,ymax:l+r<=i*s?0:l+r<i*s+s?l+r-i*s:s}}(a,r,i,o,f,c,n,h);let u=0,m=0;if(l){const p=l.hasGCSSShiftTransform?360:l.halfWorldWidth??0,M=a*l.resolutionX,_=l.startX+i*M;_<p&&_+M>p?m=l.rightPadding:_>=p&&(u=l.leftMargin-l.rightPadding,m=0)}if(y.xmax-=m,"number"!=typeof s)for(let p=y.ymin;p<y.ymax;p++){const M=(o*r+p-c)*n+(i*a-f)+u,_=p*a;for(let P=y.xmin;P<y.xmax;P++)t[M+P]=s[_+P]}else for(let p=y.ymin;p<y.ymax;p++){const M=(o*r+p-c)*n+(i*a-f)+u;for(let _=y.xmin;_<y.xmax;_++)t[M+_]=s}}function et(t,s,e={}){const{clipOffset:i,clipSize:o,alignmentInfo:l,blockWidths:a}=e;if(a)return function z(t,s,e){const i=t.find(M=>null!=M);if(null==i)return null;const o=t.some(M=>null==M||!!M.mask),{width:l,height:a}=s,r=o?new Uint8Array(l*a):null,{blockWidths:f}=e,c=[],n=i.getPlaneCount(),h=N.Z.getPixelArrayConstructor(i.pixelType);if(o)for(let M=0,_=0;M<t.length;_+=f[M],M++){const P=t[M];if(!J(P))continue;const O=P.mask;for(let b=0;b<a;b++)for(let U=0;U<f[M];U++)r[b*l+U+_]=null==O?255:O[b*P.width+U]}const y=t.some(M=>M?.bandMasks&&M.bandMasks.length>1),u=y?[]:void 0,m=l*a;for(let M=0;M<n;M++){const _=new h(m),P=y?new Uint8Array(m):void 0;for(let O=0,b=0;O<t.length;b+=f[O],O++){const U=t[O];if(!J(U))continue;const R=U.pixels[M];if(null!=R){for(let C=0;C<a;C++)for(let W=0;W<f[O];W++)_[C*l+W+b]=R[C*U.width+W];if(P){const C=U.bandMasks?.[M]??U.mask;for(let W=0;W<a;W++)for(let $=0;$<f[O];$++)P[W*l+$+b]=C?C[W*U.width+$]:255}}}c.push(_),u&&P&&u.push(P)}const p=new N.Z({width:l,height:a,mask:r,bandMasks:u,pixels:c,pixelType:i.pixelType});return p.updateStatistics(),p}(t,s,{blockWidths:a});const r=t.find(j=>J(j));if(null==r)return null;const f=o?o.width:s.width,c=o?o.height:s.height,n=r.width,h=r.height,y=s.width/n,u=s.height/h,m={offset:i||{x:0,y:0},mosaic:o||s,block:{width:n,height:h}},p=r.pixelType,M=N.Z.getPixelArrayConstructor(p),_=r.pixels.length,P=[];let O,b;for(let j=0;j<_;j++){b=new M(f*c);for(let G=0;G<u;G++)for(let Z=0;Z<y;Z++){const q=t[G*y+Z];J(q)&&(O=q.pixels[j],Y(b,O,m,Z,G,l))}P.push(b)}const U=t.some(j=>null==j||null!=j.mask&&j.mask.length>0),R=t.some(j=>j?.bandMasks&&j.bandMasks.length>1),C=U?new Uint8Array(f*c):void 0,W=R?[]:void 0;if(C){for(let j=0;j<u;j++)for(let G=0;G<y;G++){const Z=t[j*y+G];Y(C,(null!=Z?Z.mask:null)??(Z?255:0),m,G,j,l)}if(W)for(let j=0;j<_;j++){const G=new Uint8Array(f*c);for(let Z=0;Z<u;Z++)for(let q=0;q<y;q++){const at=t[Z*y+q];Y(G,at?.bandMasks?.[j]??at?.mask??(at?255:0),m,q,Z,l)}W.push(G)}}const $=new N.Z({width:f,height:c,pixels:P,pixelType:p,bandMasks:W,mask:C});return $.updateStatistics(),$}function B(t,s,e){if(!J(t))return null;const{width:i,height:o}=t,l=s.x,a=s.y,r=e.width+l,f=e.height+a;if(l<0||a<0||r>i||f>o||0===l&&0===a&&r===i&&f===o)return t;t.mask||(t.mask=new Uint8Array(i*o));const c=t.mask;for(let n=0;n<o;n++){const h=n*i;for(let y=0;y<i;y++)c[h+y]=n<a||n>=f||y<l||y>=r?0:1}return t.updateStatistics(),t}function D(t){if(0===t.size)return 0;let s=0,e=-1,i=0;const o=t.keys();let l=o.next();for(;!l.done;)i=t.get(l.value),i>s&&(e=l.value,s=i),l=o.next();return e}function E(t,s,e){if(0===e)return;const i=t.get(s);1===i?t.delete(s):t.set(s,i-1)}function F(t,s,e){0!==e&&t.set(s,t.has(s)?t.get(s)+1:1)}function d(t,s,e){let{x:i,y:o}=s;const{width:l,height:a}=e;if(0===i&&0===o&&a===t.height&&l===t.width)return t;const{width:r,height:f}=t,c=Math.max(0,o),n=Math.max(0,i),h=Math.min(i+l,r),y=Math.min(o+a,f);if(h<0||y<0||!J(t))return null;i=Math.max(0,-i),o=Math.max(0,-o);const{pixels:u}=t,m=l*a,p=u.length,M=[];for(let b=0;b<p;b++){const U=u[b],R=N.Z.createEmptyBand(t.pixelType,m);for(let C=c;C<y;C++){const W=C*r;let $=(C+o-c)*l+i;for(let j=n;j<h;j++)R[$++]=U[W+j]}M.push(R)}const _=new Uint8Array(m),P=t.mask;for(let b=c;b<y;b++){const U=b*r;let R=(b+o-c)*l+i;for(let C=n;C<h;C++)_[R++]=P?P[U+C]:1}const O=new N.Z({width:e.width,height:e.height,pixelType:t.pixelType,pixels:M,mask:_});return O.updateStatistics(),O}function k(t,s=!0){if(!J(t))return null;const{pixels:e,width:i,height:o,mask:l,pixelType:a}=t,r=[],f=Math.round(i/2),c=Math.round(o/2),n=o-1,h=i-1;for(let u=0;u<e.length;u++){const m=e[u],p=N.Z.createEmptyBand(a,f*c);let M=0;for(let _=0;_<o;_+=2)for(let P=0;P<i;P+=2){const O=m[_*i+P];if(s){const b=P===h?O:m[_*i+P+1],U=_===n?O:m[_*i+P+i];p[M++]=(O+b+U+(P===h?U:_===n?b:m[_*i+P+i+1]))/4}else p[M++]=O}r.push(p)}let y=null;if(null!=l){y=new Uint8Array(f*c);let u=0;for(let m=0;m<o;m+=2)for(let p=0;p<i;p+=2){const M=l[m*i+p];if(s){const _=p===h?M:l[m*i+p+1],P=m===n?M:l[m*i+p+i];y[u++]=M*_*P*(p===h?P:m===n?_:l[m*i+p+i+1])?1:0}else y[u++]=M}}return new N.Z({width:f,height:c,pixelType:a,pixels:r,mask:y})}function w(t,s,e){if(!J(t))return null;const{width:i,height:o}=s;let{width:l,height:a}=t;const r=new Map,f={x:0,y:0},c=null==e?1:1+e;let n=t;for(let h=0;h<c;h++){const y=Math.ceil(l/i),u=Math.ceil(a/o);for(let m=0;m<u;m++){f.y=m*o;for(let p=0;p<y;p++){f.x=p*i;const M=d(n,f,s);r.set(`${h}/${m}/${p}`,M)}}h<c-1&&(n=k(n)),l=Math.round(l/2),a=Math.round(a/2)}return r}function A(t,s,e,i,o=0){const{width:l,height:a}=t,{width:r,height:f}=s,c=i.cols,n=i.rows,h=Math.ceil(r/c-.1/c),y=Math.ceil(f/n-.1/n);let u,m,p,M,_,P,O;const b=h*c,U=b*y*n,R=new Float32Array(U),C=new Float32Array(U),W=new Uint32Array(U),$=new Uint32Array(U);let j,G,Z=0;for(let q=0;q<y;q++)for(let at=0;at<h;at++){u=12*(q*h+at),m=e[u],p=e[u+1],M=e[u+2],_=e[u+3],P=e[u+4],O=e[u+5];for(let rt=0;rt<n;rt++){Z=(q*n+rt)*b+at*c,G=(rt+.5)/n;for(let it=0;it<rt;it++)j=(it+.5)/c,R[Z+it]=(m*j+p*G+M)*l+o,C[Z+it]=(_*j+P*G+O)*a+o,W[Z+it]=Math.floor(R[Z+it]),$[Z+it]=Math.floor(C[Z+it])}u+=6,m=e[u],p=e[u+1],M=e[u+2],_=e[u+3],P=e[u+4],O=e[u+5];for(let rt=0;rt<n;rt++){Z=(q*n+rt)*b+at*c,G=(rt+.5)/n;for(let it=rt;it<c;it++)j=(it+.5)/c,R[Z+it]=(m*j+p*G+M)*l+o,C[Z+it]=(_*j+P*G+O)*a+o,W[Z+it]=Math.floor(R[Z+it]),$[Z+it]=Math.floor(C[Z+it])}}return{offsets_x:R,offsets_y:C,offsets_xi:W,offsets_yi:$,gridWidth:b}}function g(t,s){const{coefficients:e,spacing:i}=s,{offsets_x:o,offsets_y:l,gridWidth:a}=A(t,t,e,{rows:i[0],cols:i[1]}),{width:r,height:f}=t,c=new Float32Array(r*f),n=180/Math.PI;for(let h=0;h<f;h++)for(let y=0;y<r;y++){const u=h*a+y,m=0===h?u:u-a,p=h===f-1?u:u+a,M=o[m]-o[p],_=l[p]-l[m];if(isNaN(M)||isNaN(_))c[h*r+y]=90;else{let P=Math.atan2(_,M)*n;P=(360+P)%360,c[h*r+y]=P}}return c}function x(t,s,e,i,o="nearest"){if(!J(t))return null;"majority"===o&&(t=function v(t){if(!J(t))return null;const s=t.clone(),{width:e,height:i,pixels:o}=t,l=o[0],a=s.pixels[0],r=t.mask;for(let f=2;f<i-1;f++){const c=new Map;for(let h=f-2;h<f+2;h++)for(let y=0;y<4;y++){const u=h*e+y;F(c,l[u],r?r[u]:1)}a[f*e]=D(c),a[f*e+1]=a[f*e+2]=a[f*e];let n=3;for(;n<e-1;n++){let h=(f-2)*e+n+1;F(c,l[h],r?r[h]:1),h=(f-1)*e+n+1,F(c,l[h],r?r[h]:1),h=f*e+n+1,F(c,l[h],r?r[h]:1),h=(f+1)*e+n+1,F(c,l[h],r?r[h]:1),h=(f-2)*e+n-3,E(c,l[h],r?r[h]:1),h=(f-1)*e+n-3,E(c,l[h],r?r[h]:1),h=f*e+n-3,E(c,l[h],r?r[h]:1),h=(f+1)*e+n-3,E(c,l[h],r?r[h]:1),a[f*e+n]=D(c)}a[f*e+n+1]=a[f*e+n]}for(let f=0;f<e;f++)a[f]=a[e+f]=a[2*e+f],a[(i-1)*e+f]=a[(i-2)*e+f];return s.updateStatistics(),s}(t));const{pixels:l,mask:a,bandMasks:r,pixelType:f}=t,c=t.width,n=t.height,h=N.Z.getPixelArrayConstructor(f),y=l.length,{width:u,height:m}=s;let p=!1;for(let Z=0;Z<e.length;Z+=3)-1===e[Z]&&-1===e[Z+1]&&-1===e[Z+2]&&(p=!0);const{offsets_x:M,offsets_y:_,offsets_xi:P,offsets_yi:O,gridWidth:b}=A({width:c,height:n},s,e,i,"majority"===o?.5:0);let U;const R=(Z,q,at,rt)=>{const it=Z instanceof Float32Array||Z instanceof Float64Array?0:.5;for(let pt=0;pt<m;pt++){U=pt*b;for(let nt=0;nt<u;nt++){if(M[U]<0||_[U]<0)Z[pt*u+nt]=0;else if(rt)Z[pt*u+nt]=q[P[U]+O[U]*c];else{const lt=Math.floor(M[U]),gt=Math.floor(_[U]),wt=Math.ceil(M[U]),kt=Math.ceil(_[U]),At=M[U]-lt,vt=_[U]-gt;Z[pt*u+nt]=!at||at[lt+gt*c]&&at[wt+gt*c]&&at[lt+kt*c]&&at[wt+kt*c]?(1-vt)*((1-At)*q[lt+gt*c]+At*q[wt+gt*c])+vt*((1-At)*q[lt+kt*c]+At*q[wt+kt*c])+it:q[P[U]+O[U]*c]}U++}}},C=[];let W;const $=r?.length===y,j=[];for(let Z=0;Z<y;Z++){if($){const q=new Uint8Array(u*m);R(q,r[Z],r[Z],!0),j.push(q)}W=new h(u*m),R(W,l[Z],$?r[Z]:a,"nearest"===o||"majority"===o),C.push(W)}const G=new N.Z({width:u,height:m,pixelType:f,pixels:C,bandMasks:$?j:void 0});if(null!=a)G.mask=new Uint8Array(u*m),R(G.mask,a,a,!0);else if(p){G.mask=new Uint8Array(u*m);for(let Z=0;Z<u*m;Z++)G.mask[Z]=M[Z]<0||_[Z]<0?0:1}return G.updateStatistics(),G}},89479:(bt,_t,tt)=>{tt.d(_t,{BH:()=>I,K:()=>D,KC:()=>mt,NL:()=>dt,QI:()=>T,Tg:()=>ot,Yx:()=>yt,nb:()=>F,wF:()=>E,xQ:()=>st});var N=tt(84303),xt=tt(8868),ht=tt(98797);const ct=new Map;ct.set("meter-per-second",1),ct.set("kilometer-per-hour",.277778),ct.set("knots",.514444),ct.set("feet-per-second",.3048),ct.set("mile-per-hour",.44704);const ft=180/Math.PI,J=5,dt=new N.X({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function yt(d,k){return ct.get(d)/ct.get(k)||1}function Mt(d){return(450-d)%360}function ot(d,k="geographic"){const[w,A]=d,g=Math.sqrt(w*w+A*A);let x=Math.atan2(A,w)*ft;return x=(360+x)%360,"geographic"===k&&(x=Mt(x)),[g,x]}function ut(d,k="geographic"){let w=d[1];"geographic"===k&&(w=Mt(w)),w%=360;const A=d[0];return[A*Math.cos(w/ft),A*Math.sin(w/ft)]}function st(d,k,w,A="geographic"){if(!(0,ht.nk)(d)||null==w)return d;const g="vector-magdir"===k?d.clone():mt(d,k),x=g.pixels[1];for(let t=0;t<x.length;t++)x[t]="geographic"===A?(x[t]+w[t]+270)%360:(x[t]+360-w[t])%360;return"vector-magdir"===k?g:mt(g,"vector-magdir")}function mt(d,k,w="geographic",A=1){if(!(0,ht.nk)(d))return d;const{pixels:g,width:x,height:t}=d,s=x*t,e=g[0],i=g[1],o=d.pixelType.startsWith("f")?d.pixelType:"f32",l=xt.Z.createEmptyBand(o,s),a=xt.Z.createEmptyBand(o,s);let r=0;for(let c=0;c<t;c++)for(let n=0;n<x;n++)"vector-uv"===k?([l[r],a[r]]=ot([e[r],i[r]],w),l[r]*=A):([l[r],a[r]]=ut([e[r],i[r]],w),l[r]*=A,a[r]*=A),r++;const f=new xt.Z({pixelType:o,width:d.width,height:d.height,mask:d.mask,validPixelCount:d.validPixelCount,maskIsAlpha:d.maskIsAlpha,pixels:[l,a]});return f.updateStatistics(),f}function T(d,k,w=1){if(1===w||!(0,ht.nk)(d))return d;const A=d.clone(),{pixels:g,width:x,height:t}=A,s=g[0],e=g[1];let i=0;for(let o=0;o<t;o++)for(let l=0;l<x;l++)"vector-uv"===k?(s[i]*=w,e[i]*=w):s[i]*=w,i++;return A.updateStatistics(),A}function I(d,k,w,A,g){if(null==g||!g.spatialReference.equals(d.spatialReference))return{extent:d,width:Math.round(k/A),height:Math.round(w/A),resolution:d.width/k};const x=g.xmin,t=g.ymax,s=(d.xmax-d.xmin)/k*A,e=(d.ymax-d.ymin)/w*A,i=(s+e)/2;return d.xmin=x+Math.floor((d.xmin-x)/s)*s,d.xmax=x+Math.ceil((d.xmax-x)/s)*s,d.ymin=t+Math.floor((d.ymin-t)/e)*e,d.ymax=t+Math.ceil((d.ymax-t)/e)*e,{extent:d,width:Math.round(d.width/s),height:Math.round(d.height/e),resolution:i}}const K=X(0,0,0);function X(d=0,k=0,w=Math.PI,A=!0){A&&(w=(2*Math.PI-w)%(2*Math.PI));const g=A?-1:1,x=13*g,t=-7*g,s=-2*g,e=-16*g,i=21.75,[o,l]=V(0,k+x,w,i),[a,r]=V(d-5.5,k+t,w,i),[f,c]=V(d+5.5,k+t,w,i),[n,h]=V(d-1.5,k+s,w,i),[y,u]=V(d+1.5,k+s,w,i),[m,p]=V(d-1.5,k+e,w,i),[M,_]=V(d+1.5,k+e,w,i);return[o,l,a,r,n,h,y,u,f,c,m,p,M,_]}function H(d=0,k=Math.PI,w=!0){w&&(k=(2*Math.PI-k)%(2*Math.PI));const g=w?-1:1,x=5*g,t=20*g,s=25*g,e=45,r=2*g,f=w?1:-1,c=5*f;let[n,h]=[0+c,0-t],[y,u]=[n+2*f,h],[m,p]=[y-0*f,u+r],[M,_]=[0-c,0-s],[P,O]=[M+0*f,_-r],b=Math.ceil(d/J),U=Math.floor(b/10);b-=8*U;const R=[],C=[];for(let pt=0;pt<b/2;pt++,U--){U<=0&&b%2==1&&pt===(b-1)/2&&(M=0,P=M+0*f,_=(_+h)/2,O=_-r);const[nt,lt]=V(M,_,k,e);if(U>0){const[gt,wt]=V(y,_,k,e),[kt,At]=V(n,h,k,e);R.push(gt),R.push(wt),R.push(nt),R.push(lt),R.push(kt),R.push(At)}else{const[gt,wt]=V(y,u,k,e),[kt,At]=V(m,p,k,e),[vt,Pt]=V(P,O,k,e);C.push(nt),C.push(lt),C.push(vt),C.push(Pt),C.push(kt),C.push(At),C.push(gt),C.push(wt)}_+=x,h+=x,u+=x,p+=x,O+=x}const[W,$]=V(0+c,0+t,k,e),j=7*f,[G,Z]=V(0+j,0+t,k,e),[q,at]=V(0+c,0-s,k,e),[rt,it]=V(0+j,0-s,k,e);return{pennants:R,barbs:C,shaft:[W,$,G,Z,q,at,rt,it]}}function V(d,k,w,A=1){const g=Math.sqrt(d*d+k*k)/A,x=(2*Math.PI+Math.atan2(k,d))%(2*Math.PI);return[g,(2*Math.PI+x-w)%(2*Math.PI)]}const S=[0,1,3,6,10,16,21,27,33,40,47,55,63],Q=[0,.5,1,1.5,2],L=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(d,k,w,A){const g=yt(A||"knots",w);let x;for(x=1;x<k.length;x++)if(x===k.length-1){if(d<k[x]*g)break}else if(d<=k[x]*g)break;return Math.min(x-1,k.length-2)}function et(d,k,w,A,g){let x=0;switch(k){case"beaufort_kn":x=Y(d,S,"knots",w);break;case"beaufort_km":x=Y(d,S,"kilometer-per-hour",w);break;case"beaufort_ft":x=Y(d,S,"feet-per-second",w);break;case"beaufort_m":x=Y(d,S,"meter-per-second",w);break;case"classified_arrow":x=Y(d,g??[],A,w);break;case"ocean_current_m":x=Y(d,Q,"meter-per-second",w);break;case"ocean_current_kn":x=Y(d,L,"knots",w)}return x}const B=[];function D(d,k){let A=0,g=0;const{width:x,height:t,mask:s}=d,e=d.pixels[0],i=[],o=[],l=yt(dt.fromJSON(k.inputUnit),"knots"),a="wind_speed"===k.style?J:Number.MAX_VALUE;for(let r=0;r<t;r++)for(let f=0;f<x;f++){const c=e[r*x+f]*l;if((!s||s[r*x+f])&&c<a){for(let h=0;h<4;h++)i[A++]=(f+.5)/x,i[A++]=(r+.5)/t,i[A++]=h<2?-.5:.5,i[A++]=h%2==0?-.5:.5,i[A++]=0,i[A++]=c;const n=4*(A/24-1);o[g++]=n,o[g++]=n+1,o[g++]=n+2,o[g++]=n+1,o[g++]=n+2,o[g++]=n+3}}return{vertexData:new Float32Array(i),indexData:new Uint32Array(o)}}function E(d,k){return"simple_scalar"===k.style?D(d,k):"wind_speed"===k.style?function v(d,k){if(0===B.length)for(let r=0;r<30;r++)B.push(H(5*r,0,!k.invertDirection));const w=yt(dt.fromJSON(k.inputUnit),"knots"),{width:A,height:g,mask:x}=d,t=d.pixels[0],s=d.pixels[1],i=[],o=[];let l=0,a=0;for(let r=0;r<g;r++)for(let f=0;f<A;f++){const c=r*A+f,n=t[c]*w;if((!x||x[r*A+f])&&n>=J){const h=(s[c]+360)%360/180*Math.PI,{pennants:y,barbs:u,shaft:m}=B[Math.min(Math.floor(n/5),29)];if(y.length+u.length===0)continue;let p=i.length/6;const M=(f+.5)/A,_=(r+.5)/g;for(let P=0;P<y.length;P+=2)i[l++]=M,i[l++]=_,i[l++]=y[P],i[l++]=y[P+1]+h,i[l++]=0,i[l++]=n;for(let P=0;P<u.length;P+=2)i[l++]=M,i[l++]=_,i[l++]=u[P],i[l++]=u[P+1]+h,i[l++]=0,i[l++]=n;for(let P=0;P<m.length;P+=2)i[l++]=M,i[l++]=_,i[l++]=m[P],i[l++]=m[P+1]+h,i[l++]=0,i[l++]=n;for(let P=0;P<y.length/6;P++)o[a++]=p,o[a++]=p+1,o[a++]=p+2,p+=3;for(let P=0;P<u.length/8;P++)o[a++]=p,o[a++]=p+1,o[a++]=p+2,o[a++]=p+1,o[a++]=p+2,o[a++]=p+3,p+=4;o[a++]=p+0,o[a++]=p+1,o[a++]=p+2,o[a++]=p+1,o[a++]=p+3,o[a++]=p+2,p+=4}}return{vertexData:new Float32Array(i),indexData:new Uint32Array(o)}}(d,k):function z(d,k){const{style:w,inputUnit:A,outputUnit:g,breakValues:x}=k,t=dt.fromJSON(A),s=dt.fromJSON(g);let o=0,l=0;const{width:a,height:r,mask:f}=d,c=d.pixels[0],n=d.pixels[1],h=null!=f?f.filter(p=>p>0).length:a*r,y=new Float32Array(42*h),u=new Uint32Array(15*h),m=k.invertDirection?X(0,0,0,!1):K;for(let p=0;p<r;p++)for(let M=0;M<a;M++){const _=p*a+M;if(!f||f[p*a+M]){const P=(n[_]+360)%360/180*Math.PI,O=et(c[_],w,t,s,x);for(let U=0;U<m.length;U+=2)y[o++]=(M+.5)/a,y[o++]=(p+.5)/r,y[o++]=m[U],y[o++]=m[U+1]+P,y[o++]=O,y[o++]=c[_];const b=7*(o/42-1);u[l++]=b,u[l++]=b+1,u[l++]=b+2,u[l++]=b+0,u[l++]=b+4,u[l++]=b+3,u[l++]=b+0,u[l++]=b+2,u[l++]=b+3,u[l++]=b+2,u[l++]=b+5,u[l++]=b+3,u[l++]=b+5,u[l++]=b+6,u[l++]=b+3}}return{vertexData:y,indexData:u}}(d,k)}function F(d,k,w,A=[0,0],g=.5){const{width:x,height:t,mask:s}=d,[e,i]=d.pixels,[o,l]=A,a=Math.round((x-o)/w),r=Math.round((t-l)/w),f=a*r,c=new Float32Array(f),n=new Float32Array(f),h=new Uint8Array(f),y="vector-uv"===k;for(let m=0;m<r;m++)for(let p=0;p<a;p++){let M=0;const _=m*a+p,P=Math.max(0,m*w+l),O=Math.max(0,p*w+o),b=Math.min(t,P+w),U=Math.min(x,O+w);for(let R=P;R<b;R++)for(let C=O;C<U;C++){const W=R*x+C;if(!s||s[W]){M++;const $=y?[e[W],i[W]]:[e[W],(360+i[W])%360],[j,G]=y?$:ut($);c[_]+=j,n[_]+=G}}if(M>=(b-P)*(U-O)*(1-g)){h[_]=1;const[R,C]=ot([c[_]/M,n[_]/M]);c[_]=R,n[_]=C}else h[_]=0,c[_]=0,n[_]=0}const u=new xt.Z({width:a,height:r,pixels:[c,n],mask:h});return u.updateStatistics(),u}},74155:(bt,_t,tt)=>{tt.d(_t,{GE:()=>st,KK:()=>L});var N=tt(15861),ht=(tt(2189),tt(14007)),ct=tt(4703),ft=tt(55117),J=tt(79412),dt=tt(65311),yt=tt(33721),Mt=tt(26894);const ot=ct.Z.getLogger("esri.views.2d.engine.flow.dataUtils"),ut=10;function st(B,v,D,E){return mt.apply(this,arguments)}function mt(){return(mt=(0,N.Z)(function*(B,v,D,E){const F=performance.now(),d=function T(B,v){const D=function X(B,v,D,E){if(0===E)return B;const F=Math.round(3*E),d=new Array(2*F+1);let k=0;for(let g=-F;g<=F;g++){const x=Math.exp(-g*g/(E*E));d[g+F]=x,k+=x}for(let g=-F;g<=F;g++)d[g+F]/=k;const w=new Float32Array(B.length);for(let g=0;g<D;g++)for(let x=0;x<v;x++){let t=0,s=0;for(let e=-F;e<=F;e++){if(x+e<0||x+e>=v)continue;const i=d[e+F];t+=i*B[2*(g*v+(x+e))],s+=i*B[2*(g*v+(x+e))+1]}w[2*(g*v+x)]=t,w[2*(g*v+x)+1]=s}const A=new Float32Array(B.length);for(let g=0;g<v;g++)for(let x=0;x<D;x++){let t=0,s=0;for(let e=-F;e<=F;e++){if(x+e<0||x+e>=D)continue;const i=d[e+F];t+=i*w[2*((x+e)*v+g)],s+=i*w[2*((x+e)*v+g)+1]}A[2*(x*v+g)]=t,A[2*(x*v+g)+1]=s}return A}(v.data,v.width,v.height,B.smoothing);return B.interpolate?(E,F)=>{const d=Math.floor(E),k=Math.floor(F);if(d<0||d>=v.width)return[0,0];if(k<0||k>=v.height)return[0,0];const w=E-d,A=F-k,t=d<v.width-1?d+1:d,s=k<v.height-1?k+1:k;return[(D[2*(k*v.width+d)]*(1-A)+D[2*(s*v.width+d)]*A)*(1-w)+(D[2*(k*v.width+t)]*(1-A)+D[2*(s*v.width+t)]*A)*w,(D[2*(k*v.width+d)+1]*(1-A)+D[2*(s*v.width+d)+1]*A)*(1-w)+(D[2*(k*v.width+t)+1]*(1-A)+D[2*(s*v.width+t)+1]*A)*w]}:(E,F)=>{const d=Math.round(E),k=Math.round(F);return d<0||d>=v.width||k<0||k>=v.height?[0,0]:[D[2*(k*v.width+d)],D[2*(k*v.width+d)+1]]}}(v,D),k=performance.now(),w=function K(B,v,D,E){const F=[],d=new dt.Z,k=1/Math.max(B.lineCollisionWidth,1),w=Math.round(D*k),A=Math.round(E*k),g=new Int32Array(w*A);for(let t=0;t<g.length;t++)g[t]=-1;const x=[];for(let t=0;t<E;t+=B.lineSpacing)for(let s=0;s<D;s+=B.lineSpacing)x.push({x:s,y:t,sort:d.getFloat()});x.sort((t,s)=>t.sort-s.sort);for(const{x:t,y:s}of x)if(d.getFloat()<B.density){const e=I(B,v,t,s,F.length,g,w,A,k);if(e.length<2)continue;F.push(e)}return F}(v,d,D.width,D.height),A=performance.now(),g=function H(B,v){const D=new dt.Z,E=B.reduce((A,g)=>A+g.length,0),F=new Float32Array(4*E),d=new Array(B.length);let k=0,w=0;for(const A of B){const g=k;for(const x of A)F[4*k]=x.x,F[4*k+1]=x.y,F[4*k+2]=x.t,F[4*k+3]=x.speed,k++;d[w++]={startVertex:g,numberOfVertices:A.length,totalTime:A[A.length-1].t,timeSeed:v?D.getFloat():0}}return{lineVertices:F,lineDescriptors:d}}(w,!0),x=performance.now(),t="Streamlines"===B?function V(B,v){const{lineVertices:E,lineDescriptors:F}=B;let d=0,k=0;for(const e of F)d+=2*e.numberOfVertices,k+=6*(e.numberOfVertices-1);const w=new Float32Array(9*d),A=new Uint32Array(k);let g=0,x=0;function s(e,i,o,l,a,r,f,c){const n=9*g;let h=0;w[n+h++]=e,w[n+h++]=i,w[n+h++]=1,w[n+h++]=o,w[n+h++]=r,w[n+h++]=f,w[n+h++]=l/2,w[n+h++]=a/2,w[n+h++]=c,g++,w[n+h++]=e,w[n+h++]=i,w[n+h++]=-1,w[n+h++]=o,w[n+h++]=r,w[n+h++]=f,w[n+h++]=-l/2,w[n+h++]=-a/2,w[n+h++]=c,g++}for(const e of F){const{totalTime:i,timeSeed:o}=e;let l=null,a=null,r=null,f=null,c=null,n=null;for(let h=0;h<e.numberOfVertices;h++){const y=E[4*(e.startVertex+h)],u=E[4*(e.startVertex+h)+1],m=E[4*(e.startVertex+h)+2],p=E[4*(e.startVertex+h)+3];let M=null,_=null,P=null,O=null;if(h>0){M=y-l,_=u-a;const b=Math.sqrt(M*M+_*_);if(M/=b,_/=b,h>1){let U=M+c,R=_+n;const C=Math.sqrt(U*U+R*R);U/=C,R/=C;const W=Math.min(1/(U*M+R*_),v);U*=W,R*=W,P=-R,O=U}else P=-_,O=M;null!==P&&null!==O&&(s(l,a,r,P,O,i,o,p),A[x++]=g-2,A[x++]=g,A[x++]=g-1,A[x++]=g,A[x++]=g+1,A[x++]=g-1)}l=y,a=u,r=m,c=M,n=_,f=p}s(l,a,r,-n,c,i,o,f)}return{vertexData:w,indexData:A}}(g,ut):function S(B){const{lineVertices:F,lineDescriptors:d}=B;let k=0,w=0;for(const b of d){const U=b.numberOfVertices-1;k+=4*U*2,w+=6*U*2}const A=new Float32Array(16*k),g=new Uint32Array(w);let x,t,s,e,i,o,l,a,r,f,c,n,h,y,u=0,m=0;function _(b,U){let R=r+c,C=f+n;const W=Math.sqrt(R*R+C*C);R/=W,C/=W;const $=r*R+f*C;R/=$,C/=$;let j=c+h,G=n+y;const Z=Math.sqrt(j*j+G*G);j/=Z,G/=Z;const q=c*j+n*G;j/=q,G/=q,function M(b,U,R,C,W,$,j,G,Z,q,at,rt,it,pt){const nt=16*u;let lt=0;for(const gt of[1,2])for(const wt of[1,2,3,4])A[nt+lt++]=b,A[nt+lt++]=U,A[nt+lt++]=R,A[nt+lt++]=C,A[nt+lt++]=j,A[nt+lt++]=G,A[nt+lt++]=Z,A[nt+lt++]=q,A[nt+lt++]=gt,A[nt+lt++]=wt,A[nt+lt++]=it,A[nt+lt++]=pt,A[nt+lt++]=W/2,A[nt+lt++]=$/2,A[nt+lt++]=at/2,A[nt+lt++]=rt/2,u++}(x,t,s,e,-C,R,i,o,l,a,-G,j,b,U),function p(){g[m++]=u-8,g[m++]=u-7,g[m++]=u-6,g[m++]=u-7,g[m++]=u-5,g[m++]=u-6,g[m++]=u-4,g[m++]=u-3,g[m++]=u-2,g[m++]=u-3,g[m++]=u-1,g[m++]=u-2}()}function P(b,U,R,C,W,$){if(r=c,f=n,c=h,n=y,null==r&&null==f&&(r=c,f=n),null!=i&&null!=o){h=b-i,y=U-o;const j=Math.sqrt(h*h+y*y);h/=j,y/=j}null!=r&&null!=f&&_(W,$),x=i,t=o,s=l,e=a,i=b,o=U,l=R,a=C}function O(b,U){r=c,f=n,c=h,n=y,null==r&&null==f&&(r=c,f=n),null!=r&&null!=f&&_(b,U)}for(const b of d){x=null,t=null,s=null,e=null,i=null,o=null,l=null,a=null,r=null,f=null,c=null,n=null,h=null,y=null;const{totalTime:U,timeSeed:R}=b;for(let C=0;C<b.numberOfVertices;C++)P(F[4*(b.startVertex+C)],F[4*(b.startVertex+C)+1],F[4*(b.startVertex+C)+2],F[4*(b.startVertex+C)+3],U,R);O(U,R)}return{vertexData:A,indexData:g}}(g),s=performance.now();return(0,ht.Z)("esri-2d-profiler")&&(ot.info("I.1","_createFlowFieldFromData (ms)",Math.round(k-F)),ot.info("I.2","_getStreamlines (ms)",Math.round(A-k)),ot.info("I.3","createAnimatedLinesData (ms)",Math.round(x-A)),ot.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(s-x)),ot.info("I.5","createFlowMesh (ms)",Math.round(s-F)),ot.info("I.6","Mesh size (bytes)",t.vertexData.buffer.byteLength+t.indexData.buffer.byteLength)),yield Promise.resolve(),(0,J.k_)(E),t})).apply(this,arguments)}function I(B,v,D,E,F,d,k,w,A){const g=[];let x=D,t=E,s=0,[e,i]=v(x,t);e*=B.velocityScale,i*=B.velocityScale;const o=Math.sqrt(e*e+i*i);let l,a;g.push({x,y:t,t:s,speed:o});for(let r=0;r<B.verticesPerLine;r++){let[f,c]=v(x,t);f*=B.velocityScale,c*=B.velocityScale;const n=Math.sqrt(f*f+c*c);if(n<B.minSpeedThreshold)return g;const h=f/n,y=c/n;if(x+=h*B.segmentLength,t+=y*B.segmentLength,s+=B.segmentLength/n,Math.acos(h*l+y*a)>B.maxTurnAngle)return g;if(B.collisions){const u=Math.round(x*A),m=Math.round(t*A);if(u<0||u>k-1||m<0||m>w-1)return g;const p=d[m*k+u];if(-1!==p&&p!==F)return g;d[m*k+u]=F}g.push({x,y:t,t:s,speed:n}),l=h,a=y}return g}function Q(B,v){const D=v.pixels,{width:E,height:F}=v,d=new Float32Array(E*F*2),k=v.mask||new Uint8Array(E*F*2);if(v.mask||k.fill(255),"vector-uv"===B)for(let w=0;w<E*F;w++)d[2*w]=D[0][w],d[2*w+1]=-D[1][w];else if("vector-magdir"===B)for(let w=0;w<E*F;w++){const A=D[0][w],g=(0,ft.Vl)(D[1][w]),x=Math.cos(g-Math.PI/2),t=Math.sin(g-Math.PI/2);d[2*w]=x*A,d[2*w+1]=t*A}return{data:d,mask:k,width:E,height:F}}function L(B,v,D,E,F,d){return Y.apply(this,arguments)}function Y(){return(Y=(0,N.Z)(function*(B,v,D,E,F,d){const k=performance.now(),w=(0,yt.C5)(v.spatialReference);if(!w){const c=yield et(B,v,D,E,F,d);return(0,ht.Z)("esri-2d-profiler")&&ot.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-k)),(0,ht.Z)("esri-2d-profiler")&&ot.info("I.9","Number of parts",1),c}const[A,g]=w.valid,t=Math.ceil(v.width/(g-A)),s=v.width/t,e=Math.round(D/t);let i=v.xmin;const o=[],l=performance.now();for(let c=0;c<t;c++){const n=new Mt.Z({xmin:i,xmax:i+s,ymin:v.ymin,ymax:v.ymax,spatialReference:v.spatialReference});o.push(et(B,n,e,E,F,d)),i+=s}const a=yield Promise.all(o);(0,ht.Z)("esri-2d-profiler")&&ot.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-l)),(0,ht.Z)("esri-2d-profiler")&&ot.info("I.9","Number of parts",a.length);const r={data:new Float32Array(D*E*2),mask:new Uint8Array(D*E),width:D,height:E};let f=0;for(const c of a){for(let n=0;n<c.height;n++)for(let h=0;h<c.width;h++)f+h>=D||(r.data[2*(n*D+f+h)]=c.data[2*(n*c.width+h)],r.data[2*(n*D+f+h)+1]=c.data[2*(n*c.width+h)+1],r.mask[n*D+f+h]=c.mask[n*c.width+h]);f+=c.width}return(0,ht.Z)("esri-2d-profiler")&&ot.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-k)),r})).apply(this,arguments)}function et(B,v,D,E,F,d){return z.apply(this,arguments)}function z(){return(z=(0,N.Z)(function*(B,v,D,E,F,d){const k={requestProjectedLocalDirections:!0,signal:d};if(null!=F&&(k.timeExtent=F),"imagery"===B.type){yield B.load({signal:d});const g=B.rasterInfo.dataType,x=yield B.fetchImage(v,D,E,k);return null==x?.pixelData?.pixelBlock?{data:new Float32Array(D*E*2),mask:new Uint8Array(D*E),width:D,height:E}:Q(g,x.pixelData.pixelBlock)}yield B.load({signal:d});const w=B.rasterInfo.dataType,A=yield B.fetchPixels(v,D,E,k);return null==A?.pixelBlock?{data:new Float32Array(D*E*2),mask:new Uint8Array(D*E),width:D,height:E}:Q(w,A.pixelBlock)})).apply(this,arguments)}}}]);