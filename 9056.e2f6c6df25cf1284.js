"use strict";(self.webpackChunkjsapi_angular_cli=self.webpackChunkjsapi_angular_cli||[]).push([[9056],{39056:(S,c,s)=>{s.r(c),s.d(c,{synthesizeAssociationGeometries:()=>x});var y=s(15861),m=s(66476),i=s(15462),r=s(50484),f=s(89317),p=s(80543),h=(s(1535),s(57678),s(14007),s(10141)),v=s(3587);let e=class extends f.wq{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};(0,r._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],e.prototype,"maxGeometryCountExceeded",void 0),(0,r._)([(0,p.Cb)({type:[v.Z],json:{write:!0}})],e.prototype,"associations",void 0),e=(0,r._)([(0,h.j)("esri.rest.networks.support.AssociationGeometriesResult")],e);const d=e;function x(o,n,t){return l.apply(this,arguments)}function l(){return(l=(0,y.Z)(function*(o,n,t){const a=(0,i.en)(o),u={...n.toJSON(),f:"json"},C=(0,i.cv)({...a.query,...u});t?t.method="post":t={method:"post"};const G=(0,i.lA)(C,t);return(0,m.Z)(`${a.path}/synthesizeAssociationGeometries`,G).then(A=>function j(o,n){const{data:t}=o,a=d.fromJSON(t);if(n)for(const u of a.associations)u.geometry.spatialReference=n.clone();return a}(A,n.outSpatialReference))})).apply(this,arguments)}}}]);